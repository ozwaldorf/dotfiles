format = """$directory\
$all\
$cmd_duration\
$jobs\
$status\
$shell\
$line_break\
$env_var$username$sudo$character"""

right_format = """$battery$time"""

add_newline = true

[character]
format = "$symbol "
success_symbol = "[●](bright-green)"
error_symbol = "[●](red)"
vicmd_symbol = "[◆](blue)"

[env_var.VIMSHELL] # vim subshell
format = "[$env_value]($style)"
style = 'green'

[sudo]
format = "[$symbol]($style)"
style = "bright-purple"
symbol = ":"
disabled = false

[username]
style_user = "yellow bold"
style_root = "purple bold"
format = "[$user]($style) ▻ "
disabled = false
show_always = false

[directory]
home_symbol = "⌂"
truncation_length = 2
truncation_symbol = "□ "
read_only = " △"
use_os_path_sep = true
style = "bright-blue"

[cmd_duration]
min_time = 1000
format = "[ ◕ $duration](244)"

[jobs]
format = "[$symbol$number]($style) "
style = "white"
symbol = "[▶ ](blue)"

[localip]
ssh_only = true
format = "○[$localipv4](bold magenta) "
disabled = false

[time]
disabled = true
format = "[ $time [◔](white)]($style)"
time_format = "%R"
utc_time_offset = "local"
style = "dimmed white"
time_range = "00:00:00-07:00:00"

[battery]
format = "[$percentage $symbol]($style)"
full_symbol = "[█]( green)"
charging_symbol = "[▲](green)"
discharging_symbol = "[▽]()"
unknown_symbol = "[░]()"
empty_symbol = "[▃]( red)"
disabled=false

[[battery.display]]
threshold = 40
style = "dimmed yellow"

[[battery.display]]
threshold = 70
style = "dimmed white"

[git_branch]
format = "[$symbol $branch(:$remote_branch)]($style)"
symbol = "[△](green)"
style = "green"

[git_status]
format = """ ($ahead_behind$staged$renamed$modified$untracked$deleted$conflicted$stashed)"""
conflicted = "[◪ ]( bright-magenta)"
ahead = "[▲ [${count}](bold white) ](green)"
behind = "[▼ [${count}](bold white) ](red)"
diverged = "[◇ [${ahead_count}](bold green)/[${behind_count}](bold red) ](bright-magenta)"
untracked = "[○ ](bright-yellow)"
stashed = '[${count} ](bold white)'
renamed = "[● ](bright-blue)"
modified = "[● ](yellow)"
staged = "[● ](bright-cyan)"
deleted = "[✕ ](red)"

[deno]
format = "deno [∫ $version](blue ) "
version_format = "${major}.${minor}"

[nodejs]
format = "node [◫ ($version)]( bright-green) "
detect_files = ["package.json"]
version_format = "${major}.${minor}"
# detect_folders = ["node_modules"]
# detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]

[python]
format = "py [${symbol}${version}]($style) "
symbol = "[⌉]( bright-blue)⌊ "
version_format = "${major}.${minor}"
style = " bright-yellow"

[ruby]
format = "rb [${symbol}${version}]($style) "
symbol = "◆ "
version_format = "${major}.${minor}"
style = "red"

[rust]
format = "rs [$symbol$version]($style) "
symbol = "⊃ "
version_format = "${major}.${minor}"
style = "red"

[package]
format = "pkg [$symbol$version]($style) "
version_format = "${major}.${minor}"
symbol = "◫ "
style = "bright-yellow "

[swift]
format = "sw [${symbol}${version}]($style) "
symbol = "◁ "
style = " bright-red"
version_format = "${major}.${minor}"

[aws]
disabled = true
format = "aws [$symbol $profile $region]($style) "
style = " blue"
symbol = "▲ "

[buf]
symbol = "■ "
format = "buf [$symbol $version $buf_version]($style) "

[c]
symbol = "∁ "
format = "c [$symbol($version(-$name))]($style) "

[conda]
symbol = "◯ "
format = "conda [$symbol$environment]($style) "

[dart]
symbol = "◁◅ "
format = "dart [$symbol($version )]($style) "

[docker_context]
symbol = "◧ "
format = "docker [$symbol$context]($style) "

[elixir]
symbol = "△ "
format = "exs [$symbol $version OTP $otp_version ]($style) "

[elm]
symbol = "◩ "
format = "elm [$symbol($version )]($style) "

[golang]
symbol = "∩ "
format = "go [$symbol($version )]($style) "

[haskell]
symbol = "❯λ "
format = "hs [$symbol($version )]($style) "

[java]
symbol = "∪ "
format = "java [${symbol}(${version} )]($style) "

[julia]
symbol = "◎ "
format = "jl [$symbol($version )]($style) "

[memory_usage]
symbol = "▪▫▪ "
format = "mem [${ram}( ${swap})]($style) "

[nim]
symbol = "▴▲▴ "
format = "nim [$symbol($version )]($style) "

[nix_shell]
symbol = "⊛ "
format = "nix [$symbol$state $name]($style) "

[spack]
symbol = "◇ "
format = "spack [$symbol$environment]($style) "
